package CalcApp;


/**
* CalcApp/_CalcStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ./Calc.idl
* jueves 2 de marzo de 2023 21H32' CET
*/

public class _CalcStub extends org.omg.CORBA.portable.ObjectImpl implements CalcApp.Calc
{

  public float sum (float a, float b)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("sum", true);
                $out.write_float (a);
                $out.write_float (b);
                $in = _invoke ($out);
                float $result = $in.read_float ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return sum (a, b        );
            } finally {
                _releaseReply ($in);
            }
  } // sum

  public float div (float a, float b) throws CalcApp.CalcPackage.DivisionByZero
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("div", true);
                $out.write_float (a);
                $out.write_float (b);
                $in = _invoke ($out);
                float $result = $in.read_float ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:CalcApp/Calc/DivisionByZero:1.0"))
                    throw CalcApp.CalcPackage.DivisionByZeroHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return div (a, b        );
            } finally {
                _releaseReply ($in);
            }
  } // div

  public float mul (float a, float b)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("mul", true);
                $out.write_float (a);
                $out.write_float (b);
                $in = _invoke ($out);
                float $result = $in.read_float ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return mul (a, b        );
            } finally {
                _releaseReply ($in);
            }
  } // mul

  public float sub (float a, float b)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("sub", true);
                $out.write_float (a);
                $out.write_float (b);
                $in = _invoke ($out);
                float $result = $in.read_float ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return sub (a, b        );
            } finally {
                _releaseReply ($in);
            }
  } // sub

  public CalcApp.Frac addFrac (CalcApp.Frac f1, CalcApp.Frac f2)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addFrac", true);
                CalcApp.FracHelper.write ($out, f1);
                CalcApp.FracHelper.write ($out, f2);
                $in = _invoke ($out);
                CalcApp.Frac $result = CalcApp.FracHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addFrac (f1, f2        );
            } finally {
                _releaseReply ($in);
            }
  } // addFrac

  public CalcApp.Frac subFrac (CalcApp.Frac f1, CalcApp.Frac f2)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("subFrac", true);
                CalcApp.FracHelper.write ($out, f1);
                CalcApp.FracHelper.write ($out, f2);
                $in = _invoke ($out);
                CalcApp.Frac $result = CalcApp.FracHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return subFrac (f1, f2        );
            } finally {
                _releaseReply ($in);
            }
  } // subFrac

  public CalcApp.Frac mulFrac (CalcApp.Frac f1, CalcApp.Frac f2)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("mulFrac", true);
                CalcApp.FracHelper.write ($out, f1);
                CalcApp.FracHelper.write ($out, f2);
                $in = _invoke ($out);
                CalcApp.Frac $result = CalcApp.FracHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return mulFrac (f1, f2        );
            } finally {
                _releaseReply ($in);
            }
  } // mulFrac

  public CalcApp.Frac divFrac (CalcApp.Frac f1, CalcApp.Frac f2) throws CalcApp.CalcPackage.DivisionByZero
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("divFrac", true);
                CalcApp.FracHelper.write ($out, f1);
                CalcApp.FracHelper.write ($out, f2);
                $in = _invoke ($out);
                CalcApp.Frac $result = CalcApp.FracHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:CalcApp/Calc/DivisionByZero:1.0"))
                    throw CalcApp.CalcPackage.DivisionByZeroHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return divFrac (f1, f2        );
            } finally {
                _releaseReply ($in);
            }
  } // divFrac

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CalcApp/Calc:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _CalcStub
